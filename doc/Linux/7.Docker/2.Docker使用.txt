# Docker使用

# 1. 镜像

## 1.1 搜索镜像

> ```
> docker search <镜像名> 
> ```
>
> eg：docker search centos

> ```
> docker search <镜像名>:<版本号>
> ```
>
> eg：docker search ubuntu:15.10

## 1.2 拉取镜像

> ```
> docker pull <镜像名> 
> ```
>
> eg：docker pull centos

> ```
> docker pull <镜像名>:<版本号>
> ```
>
> eg：docker pull ubuntu:15.10

## 1.3 删除镜像

- 查看已拉取的镜像信息（包含镜像ID、版本、时间、大小等）

```shell
docker images
```

- 删除镜像

> ```
> docker rmi <镜像ID>
> ```
>
> eg：docker rmi 0f3e07c0138f

## 1.4 其他镜像命令

```shell
删除所有的镜像：
docker rmi $(docker images | awk '{print $3}' |tail -n +2)
```

# 2. 容器

- 容器是由镜像实例化而来，可以把镜像看作类，把容器看作类实例化后的对象。
- 容器是在镜像的基础上运行的，启动容器后就可以登录容器 安装所需的软件。

## 2.1 运行容器

```
docker run <参数> <镜像名>[:<版本号>] [<初始命令>] 
```

`-i`：表示以“交互模式”运行容器

`-t`：表示容器启动后会进入其命令行

`-v`：表示需要将本地哪个目录挂载到容器中，格式：-v <宿主机目录>:<容器目录>

`-p `：表示端口映射，容器端口映射到服务器端口（-p 服务器端口：容器端口）

`--restart=waways`：表示随着docker服务启动一起启动容器